/**
 * LIMPEZA NUCLEAR √öNICA - Executa uma √∫nica vez e para
 */

// Verificar se j√° foi executada
const CLEANUP_KEY = "nuclear_cleanup_executed";
if (localStorage.getItem(CLEANUP_KEY)) {
  console.log("‚úÖ Limpeza nuclear j√° executada anteriormente");
} else {
  console.log("‚ò¢Ô∏è EXECUTANDO LIMPEZA NUCLEAR √öNICA");

  try {
    // 1. Limpar COMPLETAMENTE o localStorage de qualquer coisa relacionada a piscinas
    const allKeys = Object.keys(localStorage);
    let removed = 0;

    allKeys.forEach((key) => {
      const lowerKey = key.toLowerCase();
      if (
        lowerKey.includes("pool") ||
        lowerKey.includes("piscina") ||
        lowerKey.includes("maintenance") ||
        lowerKey.includes("manutenc")
      ) {
        // Preservar APENAS dados de usu√°rio
        if (!key.includes("user") && !key.includes("auth")) {
          localStorage.removeItem(key);
          removed++;
          console.log(`‚ò¢Ô∏è NUKADO: ${key}`);
        }
      }
    });

    // 2. Limpar sessionStorage
    Object.keys(sessionStorage).forEach((key) => {
      const lowerKey = key.toLowerCase();
      if (
        lowerKey.includes("pool") ||
        lowerKey.includes("piscina") ||
        lowerKey.includes("maintenance") ||
        lowerKey.includes("manutenc")
      ) {
        sessionStorage.removeItem(key);
        console.log(`‚ò¢Ô∏è SESSION NUKADA: ${key}`);
      }
    });

    console.log(`‚ò¢Ô∏è LIMPEZA NUCLEAR CONCLU√çDA: ${removed} itens destru√≠dos`);

    // Marcar como executada para n√£o repetir
    localStorage.setItem(CLEANUP_KEY, new Date().toISOString());
  } catch (error) {
    console.error("üí• Erro na limpeza nuclear:", error);
  }
}

export {};
