// SIMPLE SIDEBAR REMOVAL - Remove apenas Administra√ß√£o e Diagn√≥stico do sidebar

console.log("üóëÔ∏è SIMPLE: Iniciando remo√ß√£o simples de se√ß√µes...");

(function () {
  "use strict";

  // Fun√ß√£o simples para esconder elementos problem√°ticos
  function hideProblematicElements() {
    let hiddenCount = 0;

    // Procurar por todos os elementos de texto
    const allElements = document.querySelectorAll("*");

    for (const element of allElements) {
      const text = element.textContent?.trim();

      // Se o elemento cont√©m exatamente o texto problem√°tico
      if (text === "Diagn√≥stico" || text === "Administra√ß√£o") {
        // Verificar se √© um span com as classes espec√≠ficas do sidebar
        if (
          element.tagName === "SPAN" &&
          element.classList.contains("text-xs") &&
          element.classList.contains("font-semibold")
        ) {
          console.log(`üóëÔ∏è SIMPLE: Escondendo "${text}"`);

          // Esconder o elemento e seu container pai
          element.style.display = "none !important";

          // Procurar pelo container pai (m√°ximo 5 n√≠veis)
          let parent = element.parentElement;
          for (let i = 0; i < 5; i++) {
            if (!parent) break;

            // Se o pai tem poucos filhos e cont√©m o texto problem√°tico
            if (parent.children.length <= 3) {
              const parentText = parent.textContent?.trim();
              if (
                parentText === text ||
                (parentText.includes(text) && parentText.length < 100)
              ) {
                parent.style.display = "none !important";
                hiddenCount++;
                break;
              }
            }
            parent = parent.parentElement;
          }
        }
      }

      // Esconder bot√µes ou links com texto problem√°tico
      else if (
        (element.tagName === "BUTTON" || element.tagName === "A") &&
        (text.includes("Diagn√≥stico") || text.includes("Administra√ß√£o"))
      ) {
        console.log(`üóëÔ∏è SIMPLE: Escondendo ${element.tagName} "${text}"`);
        element.style.display = "none !important";
        hiddenCount++;
      }
    }

    return hiddenCount;
  }

  // Executar remo√ß√£o simples
  function executeSimpleRemoval() {
    try {
      const hidden = hideProblematicElements();
      if (hidden > 0) {
        console.log(`‚úÖ SIMPLE: ${hidden} elementos escondidos`);
      }
    } catch (error) {
      console.error("‚ùå SIMPLE: Erro:", error);
    }
  }

  // Agendar execu√ß√£o
  function scheduleSimpleRemoval() {
    // Executar imediatamente
    executeSimpleRemoval();

    // Executar ap√≥s 2 segundos
    setTimeout(executeSimpleRemoval, 2000);

    // Executar ap√≥s 5 segundos
    setTimeout(executeSimpleRemoval, 5000);

    // Monitor simples por 30 segundos
    const monitor = setInterval(executeSimpleRemoval, 5000);

    setTimeout(() => {
      clearInterval(monitor);
      console.log("üóëÔ∏è SIMPLE: Monitor finalizado");
    }, 30000);
  }

  // Inicializar
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", scheduleSimpleRemoval);
  } else {
    setTimeout(scheduleSimpleRemoval, 500);
  }

  console.log("üóëÔ∏è SIMPLE: Sistema simples iniciado");
})();
